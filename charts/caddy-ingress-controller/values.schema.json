{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "replicaCount",
    "minikube",
    "image",
    "imagePullSecrets",
    "nameOverride",
    "fullnameOverride",
    "ingressController",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "resources",
    "nodeSelector",
    "tolerations",
    "affinity"
  ],
  "properties": {
    "replicaCount": {
      "$id": "#/properties/replicaCount",
      "type": "number"
    },
    "minikube": {
      "$id": "#/properties/minikube",
      "type": "boolean"
    },
    "image": {
      "$id": "#/properties/image",
      "type": "object",
      "required": [
        "repository",
        "tag",
        "pullPolicy"
      ],
      "properties": {
        "repository": {
          "$id": "#/properties/image/properties/repository",
          "type": "string"
        },
        "tag": {
          "$id": "#/properties/image/properties/tag",
          "type": "string"
        },
        "pullPolicy": {
          "$id": "#/properties/image/properties/pullPolicy",
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        }
      }
    },
    "imagePullSecrets": {
      "$id": "#/properties/imagePullSecrets",
      "type": "array"
    },
    "nameOverride": {
      "$id": "#/properties/nameOverride",
      "type": "string"
    },
    "fullnameOverride": {
      "$id": "#/properties/fullnameOverride",
      "type": "string"
    },
    "loadBalancer": {
      "$id": "#/properties/loadBalancer",
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "$id": "#/properties/loadBalancer/properties/enabled",
          "type": "boolean"
        },
        "annotations": {
          "$id": "#/properties/loadBalancer/properties/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "$id": "#/properties/loadBalancer/properties/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ingressController": {
      "$id": "#/properties/ingressController",
      "type": "object",
      "required": [
        "rbac",
        "config",
        "watchNamespace"
      ],
      "properties": {
        "rbac": {
          "$id": "#/properties/ingressController/properties/rbac",
          "type": "object",
          "required": [
            "create"
          ],
          "properties": {
            "create": {
              "$id": "#/properties/ingressController/properties/rbac/properties/create",
              "type": "boolean"
            }
          }
        },
        "leaseId": {
          "$id": "#/properties/ingressController/properties/leaseId",
          "type": "string"
        },
        "config": {
          "$id": "#/properties/ingressController/properties/config",
          "type": "object",
          "properties": {
            "acmeCA": {
              "$id": "#/properties/ingressController/properties/config/properties/acmeCA",
              "type": "string",
              "oneOf": [
                {
                  "format": "uri"
                },
                {
                  "maxLength": 0
                }
              ]
            },
            "acmeEABKeyId": {
              "$id": "#/properties/ingressController/properties/config/properties/acmeEABKeyId",
              "type": "string"
            },
            "acmeEABMacKey": {
              "$id": "#/properties/ingressController/properties/config/properties/acmeEABMacKey",
              "type": "string"
            },
            "debug": {
              "$id": "#/properties/ingressController/properties/config/properties/debug",
              "type": "boolean"
            },
            "email": {
              "$id": "#/properties/ingressController/properties/config/properties/email",
              "type": "string",
              "oneOf": [
                {
                  "format": "email"
                },
                {
                  "maxLength": 0
                }
              ]
            },
            "experimentalSmartSort": {
              "$id": "#/properties/ingressController/properties/config/properties/experimentalSmartSort",
              "type": "boolean"
            },
            "metrics": {
              "$id": "#/properties/ingressController/properties/config/properties/metrics",
              "type": "boolean"
            },
            "proxyProtocol": {
              "$id": "#/properties/ingressController/properties/config/properties/proxyProtocol",
              "type": "boolean"
            },
            "onDemandTLS": {
              "$id": "#/properties/ingressController/properties/config/properties/onDemandTLS",
              "type": "boolean"
            },
            "onDemandAsk": {
              "$id": "#/properties/ingressController/properties/config/properties/onDemandAsk",
              "type": "string"
            }
          }
        },
        "verbose": {
          "$id": "#/properties/ingressController/properties/verbose",
          "type": "boolean"
        },
        "watchNamespace": {
          "$id": "#/properties/ingressController/properties/watchNamespace",
          "type": "string"
        }
      }
    },
    "service": {
      "$id": "#/properties/service",
      "type": "object",
      "required": [
        "type",
        "ipDualStack"
      ],
      "properties": {
        "internalTrafficPolicy": {
          "$id": "#/properties/service/properties/internalTrafficPolicy",
          "type": "string",
          "enum": [
            "Cluster",
            "Local"
          ]
        },
        "externalTrafficPolicy": {
          "$id": "#/properties/service/properties/externalTrafficPolicy",
          "type": "string",
          "enum": [
            "Cluster",
            "Local"
          ]
        },
        "annotations": {
          "$id": "#/properties/service/properties/annotations",
          "type": "object"
        },
        "type": {
          "$id": "#/properties/service/properties/type",
          "type": "string",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer",
            "ExternalName"
          ]
        },
        "clusterIP": {
          "$id": "#/properties/service/properties/clusterIP",
          "type": "string"
        },
        "ipDualStack": {
          "$id": "#/properties/service/properties/name",
          "type": "object",
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "$id": "#/properties/service/properties/ipDualStack/properties/enabled",
              "type": "boolean"
            },
            "ipFamilies": {
              "$id": "#/properties/service/properties/ipDualStack/properties/ipFamilies",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IPv4",
                  "IPv6"
                ]
              }
            },
            "ipFamilyPolicy": {
              "$id": "#/properties/service/properties/ipDualStack/properties/ipFamilyPolicy",
              "type": "string",
              "enum": [
                "SingleStack",
                "PreferDualStack",
                "RequireDualStack"
              ]
            }
          }
        }
      }
    },
    "serviceAccount": {
      "$id": "#/properties/serviceAccount",
      "type": "object",
      "required": [
        "create",
        "name"
      ],
      "properties": {
        "create": {
          "$id": "#/properties/serviceAccount/properties/create",
          "type": "boolean"
        },
        "name": {
          "$id": "#/properties/serviceAccount/properties/name",
          "type": "string"
        },
        "annotations": {
          "$id": "#/properties/serviceAccount/properties/annotations",
          "type": "object"
        }
      }
    },
    "podAnnotations": {
      "$id": "#/properties/podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "$id": "#/properties/podSecurityContext",
      "type": "object"
    },
    "securityContext": {
      "$id": "#/properties/securityContext",
      "type": "object"
    },
    "resources": {
      "$id": "#/properties/resources",
      "type": "object"
    },
    "nodeSelector": {
      "$id": "#/properties/nodeSelector",
      "type": "object"
    },
    "tolerations": {
      "$id": "#/properties/tolerations",
      "type": "array"
    },
    "affinity": {
      "$id": "#/properties/affinity",
      "type": "object"
    }
  }
}
